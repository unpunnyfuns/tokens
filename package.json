{
  "name": "@unpunnyfuns/tokens",
  "version": "0.5.0",
  "description": "JSON Schema for DTCG-style design tokens with resolver manifest and JSON pointer aliases",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/unpunnyfuns/tokens.git"
  },
  "bugs": {
    "url": "https://github.com/unpunnyfuns/tokens/issues"
  },
  "homepage": "https://github.com/unpunnyfuns/tokens#readme",
  "author": "unpunnyfuns <unpunnyfuns@gmail.com>",
  "license": "MIT",
  "keywords": [
    "design-tokens",
    "dtcg",
    "json-schema",
    "design-system",
    "tokens",
    "resolver"
  ],
  "type": "module",
  "main": "./dist/index.js",
  "types": "./dist/index.d.ts",
  "bin": {
    "upft": "./dist/cli/cli.js"
  },
  "engines": {
    "node": ">=22.6.0"
  },
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "import": "./dist/index.js"
    },
    "./core": {
      "types": "./dist/core/index.d.ts",
      "import": "./dist/core/index.js"
    },
    "./schemas/*": "./dist/schemas/*",
    "./validation": {
      "types": "./dist/validation/index.d.ts",
      "import": "./dist/validation/index.js"
    },
    "./bundler": {
      "types": "./dist/bundler/index.d.ts",
      "import": "./dist/bundler/index.js"
    },
    "./manifest": {
      "types": "./dist/manifest/index.d.ts",
      "import": "./dist/manifest/index.js"
    },
    "./ast": {
      "types": "./dist/ast/index.d.ts",
      "import": "./dist/ast/index.js"
    },
    "./references": {
      "types": "./dist/references/index.d.ts",
      "import": "./dist/references/index.js"
    },
    "./io": {
      "types": "./dist/io/index.d.ts",
      "import": "./dist/io/index.js"
    },
    "./api": {
      "types": "./dist/api/index.d.ts",
      "import": "./dist/api/index.js"
    },
    "./linter": {
      "types": "./dist/linter/index.d.ts",
      "import": "./dist/linter/index.js"
    },
    "./package.json": "./package.json"
  },
  "files": [
    "dist/",
    "README.md",
    "LICENSE"
  ],
  "scripts": {
    "// Code Quality": "",
    "format": "biome format --write .",
    "lint": "biome lint --write .",
    "lint:fix": "biome lint --write .",
    "check": "biome check --write .",
    "typecheck": "tsc --noEmit",
    "depcheck": "dependency-cruiser src --config .dependency-cruiser.cjs",
    "validate:examples": "npx tsx scripts/validate-examples.ts",
    "test:bundler": "npx tsx scripts/test-bundler.ts",
    "validate:bundler-output": "npx tsx scripts/validate-bundler-output.ts",
    "quality": "npm run format && npm run lint && npm run typecheck && npm run depcheck && npm run test && npm run validate:examples && npm run test:bundler && npm run validate:bundler-output",
    "quality:parallel": "node scripts/quality-parallel.js",
    "test": "vitest run",
    "test:unit": "vitest run --exclude='**/*.e2e.test.ts'",
    "test:e2e": "vitest run '**/*.e2e.test.ts'",
    "test:coverage": "vitest run --coverage",
    "test:watch": "vitest",
    "// Build Scripts": "",
    "clean": "rm -rf dist",
    "build:tsc": "node_modules/.bin/tsc -p tsconfig.build.json",
    "build:schemas:npm": "node scripts/copy-schemas-npm.js",
    "build:schemas:web": "node scripts/version-schemas.js",
    "build:npm": "npm run build:tsc && npm run build:schemas:npm",
    "build:web": "npm run build:schemas:web",
    "build": "npm run clean && npm run build:npm && npm run build:web",
    "// Release Scripts": "",
    "release": "npm run quality && npm run build"
  },
  "dependencies": {
    "ajv": "^8.17.1",
    "ajv-formats": "^3.0.1",
    "chokidar": "^4.0.3",
    "commander": "^14.0.0",
    "glob": "^11.0.3",
    "json5": "^2.2.3",
    "lru-cache": "^11.1.0",
    "picocolors": "^1.1.1",
    "yaml": "^2.8.1"
  },
  "devDependencies": {
    "@biomejs/biome": "^2.1.4",
    "@types/glob": "^8.1.0",
    "@types/node": "^24.2.1",
    "@vitest/coverage-v8": "^3.2.4",
    "dependency-cruiser": "^17.0.1",
    "memfs": "^4.36.0",
    "nodemon": "3.1.9",
    "tsx": "^4.20.4",
    "typescript": "^5.9.2",
    "vitest": "^3.2.4"
  }
}
